getTileFile tile1 inp1;
getTileFile tile2 inp2;
getTileFile tile3 inp3;

blankTile = createBlankTile(inp1);

-- First tile
i = 0;
firstTile = combineTilesRight(blankTile, blankTile);
while (i < 19) {
	firstTile = combineTilesRight(firstTile, inp1);
	firstTile = combineTilesRight(firstTile, inp2);
	firstTile = combineTilesRight(firstTile, inp3);
	i = i + 1;	
};
firstTile = combineTilesRight(firstTile, inp1);

-- Second Tile
i = 0;
secondTile = createBlankTile(inp1);
while (i < 19) {
	secondTile = combineTilesRight(secondTile, inp2);
	secondTile = combineTilesRight(secondTile, inp3);
	secondTile = combineTilesRight(secondTile, inp1);
	i = i + 1;	
};
secondTile = combineTilesRight(secondTile, inp2);
secondTile = combineTilesRight(secondTile, inp3);

mainTile = combineTilesDown(firstTile, secondTile);

j = 1;
i=0;
while (i < 56) {
	if (j==1) {
		tempTile = combineTilesRight(inp3, inp1);
		tempTile = combineTilesRight(tempTile, inp2);
		k=0;
		while (k<19) {
			tempTile = combineTilesRight(tempTile, inp3);	
			tempTile = combineTilesRight(tempTile, inp1);	
			tempTile = combineTilesRight(tempTile, inp2);	
			k=k+1;
		};
		mainTile = combineTilesDown(mainTile, tempTile); 
	} else { doNothing;};

	if (j==2) {
		tempTile = combineTilesRight(inp2, inp3);
		tempTile = combineTilesRight(tempTile, inp1);
		k=0;
		while (k<19) {
			tempTile = combineTilesRight(tempTile, inp2);	
			tempTile = combineTilesRight(tempTile, inp3);	
			tempTile = combineTilesRight(tempTile, inp1);	
			k=k+1;
		};
		mainTile = combineTilesDown(mainTile, tempTile); 
	} else {doNothing;};

	if (j==3) {
		tempTile = combineTilesRight(inp1, inp2);
		tempTile = combineTilesRight(tempTile, inp3);
		k=0;
		while (k<19) {
			tempTile = combineTilesRight(tempTile, inp1);	
			tempTile = combineTilesRight(tempTile, inp2);	
			tempTile = combineTilesRight(tempTile, inp3);
			k=k+1;	
		};
		mainTile = combineTilesDown(mainTile, tempTile); 
		j=0;
	}else {doNothing;};
	j=j+1;
	i=i+1;
};

-- Second last tile
secondLastTile = combineTilesRight(inp1, inp2);
secondLastTile = combineTilesRight(secondLastTile, inp3);
k=0;
while (k<19) {
	secondLastTile = combineTilesRight(secondLastTile, inp1);	
	secondLastTile = combineTilesRight(secondLastTile, inp2);
	if(k!=18){
		secondLastTile = combineTilesRight(secondLastTile, inp3);
	} else {doNothing;};	
	
	k=k+1;
};
secondLastTile = combineTilesRight(secondLastTile, blankTile);

-- Last tile
lastTile = combineTilesRight(inp3, inp1);
k=0;
while (k<19) {
	lastTile = combineTilesRight(lastTile, inp2);
	lastTile = combineTilesRight(lastTile, inp3);
	if(k!=18){
		lastTile = combineTilesRight(lastTile, inp1);	
	} else {doNothing;};
	k=k+1;
};
lastTile = combineTilesRight(lastTile, blankTile);
lastTile = combineTilesRight(lastTile, blankTile);

mainTile = combineTilesDown(mainTile, secondLastTile);
mainTile = combineTilesDown(mainTile, lastTile);

return mainTile;